#!/usr/bin/env pwsh
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞

Write-Host "üî® –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç..." -ForegroundColor Blue

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä –µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω
Write-Host "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º dev —Å–µ—Ä–≤–µ—Ä..." -ForegroundColor Yellow
$nodeProcesses = Get-Process -Name "node" -ErrorAction SilentlyContinue
if ($nodeProcesses) {
    $nodeProcesses | Stop-Process -Force
    Start-Sleep -Seconds 2
}

# –û—á–∏—â–∞–µ–º –∫–µ—à –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
Write-Host "üßπ –û—á–∏—â–∞–µ–º –∫–µ—à..." -ForegroundColor Yellow

if (Test-Path "dist") {
    Remove-Item -Recurse -Force "dist"
    Write-Host "‚úÖ –ü–∞–ø–∫–∞ dist –æ—á–∏—â–µ–Ω–∞" -ForegroundColor Green
}

if (Test-Path "node_modules/.vite") {
    Remove-Item -Recurse -Force "node_modules/.vite"
    Write-Host "‚úÖ Vite –∫–µ—à –æ—á–∏—â–µ–Ω" -ForegroundColor Green
}

if (Test-Path ".vite") {
    Remove-Item -Recurse -Force ".vite"
    Write-Host "‚úÖ .vite –∫–µ—à –æ—á–∏—â–µ–Ω" -ForegroundColor Green
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
Write-Host "üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..." -ForegroundColor Yellow
if (!(Test-Path "node_modules")) {
    Write-Host "üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..." -ForegroundColor Blue
    npm install
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π!" -ForegroundColor Red
        exit 1
    }
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º TypeScript
Write-Host "üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º TypeScript..." -ForegroundColor Yellow
try {
    npx tsc --noEmit
    Write-Host "‚úÖ TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è TypeScript –æ—à–∏–±–∫–∏:" -ForegroundColor Yellow
    npx tsc --noEmit
}

# –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç
Write-Host "üèóÔ∏è –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç..." -ForegroundColor Yellow

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É dist
New-Item -ItemType Directory -Force -Path "dist" | Out-Null

# –ö–æ–ø–∏—Ä—É–µ–º index.html
Copy-Item "index.html" "dist/" -Force
Write-Host "‚úÖ index.html —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω" -ForegroundColor Green

# –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º TypeScript
Write-Host "üî® –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º TypeScript..." -ForegroundColor Yellow
npx tsc
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ TypeScript —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω" -ForegroundColor Green
} else {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ TypeScript!" -ForegroundColor Red
    exit 1
}

# –°–æ–±–∏—Ä–∞–µ–º —Å Vite
Write-Host "‚ö° –°–æ–±–∏—Ä–∞–µ–º —Å Vite..." -ForegroundColor Yellow
npx vite build
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω!" -ForegroundColor Green
} else {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ Vite!" -ForegroundColor Red
    exit 1
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Å–±–æ—Ä–∫–∏
if (Test-Path "dist/miniapp") {
    $buildSize = (Get-ChildItem -Path "dist/miniapp" -Recurse | Measure-Object -Property Length -Sum).Sum
    $buildSizeMB = [math]::Round($buildSize / 1MB, 2)
    Write-Host "üìä –†–∞–∑–º–µ—Ä —Å–±–æ—Ä–∫–∏: $buildSizeMB MB" -ForegroundColor Blue
}

Write-Host "`nüéâ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
Write-Host "üìÅ –°–±–æ—Ä–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ: dist/" -ForegroundColor Blue
