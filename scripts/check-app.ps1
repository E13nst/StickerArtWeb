#!/usr/bin/env pwsh
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..." -ForegroundColor Blue

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ—Ä—Ç—ã
$ports = @(3000, 3001, 3002, 3003, 3004, 3005)

foreach ($port in $ports) {
    $connection = Get-NetTCPConnection -LocalPort $port -ErrorAction SilentlyContinue | Select-Object -First 1
    if ($connection) {
        $processId = $connection.OwningProcess
        $processName = (Get-Process -Id $processId -ErrorAction SilentlyContinue).ProcessName
        Write-Host "‚úÖ –ü–æ—Ä—Ç $port –∑–∞–Ω—è—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–º $processName (PID: $processId)" -ForegroundColor Green
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å HTTP
        try {
            $response = Invoke-WebRequest -Uri "http://localhost:$port/miniapp/" -TimeoutSec 5 -ErrorAction Stop
            Write-Host "   üåê HTTP –¥–æ—Å—Ç—É–ø–µ–Ω: $($response.StatusCode)" -ForegroundColor Green
        } catch {
            Write-Host "   ‚ùå HTTP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $($_.Exception.Message)" -ForegroundColor Red
        }
    }
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
Write-Host "`nüìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞..." -ForegroundColor Blue

$requiredFiles = @(
    "miniapp/src/App.tsx",
    "miniapp/src/main.tsx",
    "miniapp/src/pages/GalleryPage.tsx",
    "miniapp/src/components/PackCard.tsx",
    "miniapp/src/hooks/useTelegram.ts",
    "package.json",
    "vite.config.ts"
)

foreach ($file in $requiredFiles) {
    if (Test-Path $file) {
        Write-Host "‚úÖ $file" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $file - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!" -ForegroundColor Red
    }
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
Write-Host "`nüì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..." -ForegroundColor Blue

if (Test-Path "node_modules") {
    Write-Host "‚úÖ node_modules —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Green
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–∞–∫–µ—Ç—ã
    $keyPackages = @("react", "vite", "@twa-dev/sdk", "zustand")
    foreach ($package in $keyPackages) {
        if (Test-Path "node_modules/$package") {
            Write-Host "‚úÖ $package —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
        } else {
            Write-Host "‚ùå $package –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!" -ForegroundColor Red
        }
    }
} else {
    Write-Host "‚ùå node_modules –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç! –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'npm install'" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º TypeScript
Write-Host "`nüîß –ü—Ä–æ–≤–µ—Ä—è–µ–º TypeScript..." -ForegroundColor Blue
try {
    $tscVersion = npx tsc --version
    Write-Host "‚úÖ TypeScript: $tscVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå TypeScript –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
}

Write-Host "`nüéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
