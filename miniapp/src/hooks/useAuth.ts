import { useCallback } from 'react';
import { useTelegram } from './useTelegram';
import { useStickerStore } from '../store/useStickerStore';
import { apiClient } from '../api/client';

/**
 * –•—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
 * –í—ã–Ω–æ—Å–∏—Ç –ª–æ–≥–∏–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
 */
export const useAuth = () => {
  const { isInTelegramApp, isMockMode, checkInitDataExpiry } = useTelegram();
  const { setAuthLoading, setAuthStatus, setAuthError } = useStickerStore();

  const checkAuth = useCallback(async (initData: string) => {
    if (!isInTelegramApp && !initData) {
      console.log('‚úÖ –†–µ–∂–∏–º –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (dev mode)');
      setAuthStatus({
        authenticated: true,
        role: 'public'
      });
      return true;
    }
    
    if (!initData) {
      console.log('‚ö†Ô∏è initData –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
      setAuthStatus({
        authenticated: false,
        role: 'anonymous'
      });
      return false;
    }

    setAuthLoading(true);
    setAuthError(null);

    try {
      const isTestData = initData.includes('query_id=test');
      if (!isTestData) {
        const initDataCheck = checkInitDataExpiry(initData);
        if (!initDataCheck.valid) {
          throw new Error(initDataCheck.reason);
        }
      }

      apiClient.setAuthHeaders(initData);
      const authResponse = await apiClient.checkAuthStatus();
      setAuthStatus(authResponse);

      if (!authResponse.authenticated) {
        throw new Error(authResponse.message || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      }

      return true;
    } catch (error) {
      const errorMessage = error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
      setAuthError(errorMessage);
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
      
      // –í dev —Ä–µ–∂–∏–º–µ –∏–ª–∏ –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É
      if (isMockMode || !isInTelegramApp) {
        console.log('üîß –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤ dev —Ä–µ–∂–∏–º–µ –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É API');
        setAuthStatus({
          authenticated: true,
          role: 'public'
        });
        return true;
      }
      
      return false;
    } finally {
      setAuthLoading(false);
    }
  }, [isInTelegramApp, isMockMode, checkInitDataExpiry, setAuthLoading, setAuthStatus, setAuthError]);

  return { checkAuth };
};
