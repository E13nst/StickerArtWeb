import React, { useMemo, useCallback } from 'react';
import { Grid, Box, useTheme, useMediaQuery } from '@mui/material';
import { StickerSetResponse } from '@/types/sticker';
import { StickerCard } from './StickerCard';

interface StickerSetListProps {
  stickerSets: StickerSetResponse[];
  onView: (id: number, name: string) => void;
  isInTelegramApp?: boolean;
}

export const StickerSetList: React.FC<StickerSetListProps> = ({
  stickerSets,
  onView,
  isInTelegramApp = false
}) => {
  const theme = useTheme();
  const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'));

  // –ú–µ–º–æ–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ª–∏—à–Ω–∏—Ö —Ä–µ-—Ä–µ–Ω–¥–µ—Ä–æ–≤
  const handleView = useCallback((id: number, name: string) => {
    onView(id, name);
  }, [onView]);

  // –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ø–µ–π—Å–∏–Ω–≥–∞ - –º–µ–º–æ–∏–∑–∏—Ä—É–µ–º
  const spacing = useMemo(() => {
    return isSmallScreen ? 2 : 3; // 16px –Ω–∞ –º–æ–±–∏–ª–∫–∞—Ö, 24px –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ
  }, [isSmallScreen]);

  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  const maxVisibleItems = 20; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 20 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞ —Ä–∞–∑
  const visibleStickerSets = useMemo(() => {
    return stickerSets.slice(0, maxVisibleItems);
  }, [stickerSets]);

  console.log('üîç StickerSetList —Ä–µ–Ω–¥–µ—Ä:', {
    stickerSetsCount: stickerSets.length,
    visibleCount: visibleStickerSets.length,
    isInTelegramApp,
    isSmallScreen,
    spacing
  });

  return (
    <Box sx={{ 
      pb: isInTelegramApp ? 2 : 10, // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø –¥–ª—è Bottom Navigation
      px: isInTelegramApp ? 0 : 2    // –ë–æ–∫–æ–≤—ã–µ –æ—Ç—Å—Ç—É–ø—ã –Ω–∞ desktop
    }}>
      <Grid container spacing={spacing}>
        {visibleStickerSets.map((stickerSet) => {
          console.log('üîç StickerSetList —Ä–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏:', {
            stickerSetId: stickerSet.id,
            stickerSetTitle: stickerSet.title,
            isInTelegramApp
          });
          
          return (
            <Grid 
              item 
              xs={6}     // <600px: 2 –∫–∞—Ä—Ç–æ—á–∫–∏ (50% –∫–∞–∂–¥–∞—è)
              sm={4}     // 600px+: 3 –∫–∞—Ä—Ç–æ—á–∫–∏ (33% –∫–∞–∂–¥–∞—è)
              md={3}     // 900px+: 4 –∫–∞—Ä—Ç–æ—á–∫–∏ (25% –∫–∞–∂–¥–∞—è)
              lg={2.4}   // 1200px+: 5 –∫–∞—Ä—Ç–æ—á–µ–∫ (20% –∫–∞–∂–¥–∞—è)
              xl={2.4}   // 1536px+: 5 –∫–∞—Ä—Ç–æ—á–µ–∫ (20% –∫–∞–∂–¥–∞—è)
              key={stickerSet.id}
              sx={{
                minWidth: 240,  // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è desktop
                maxWidth: 280,  // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
                display: 'flex',
                justifyContent: 'center'
              }}
            >
              <StickerCard
                stickerSet={stickerSet}
                onView={handleView}
                isInTelegramApp={isInTelegramApp}
              />
            </Grid>
          );
        })}
      </Grid>
      
      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä, –µ—Å–ª–∏ –µ—Å—Ç—å —Å–∫—Ä—ã—Ç—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
      {stickerSets.length > maxVisibleItems && (
        <Box sx={{ 
          textAlign: 'center', 
          py: 2,
          color: 'text.secondary'
        }}>
          <Box component="span" sx={{ fontSize: '0.875rem' }}>
            –ü–æ–∫–∞–∑–∞–Ω–æ {maxVisibleItems} –∏–∑ {stickerSets.length} –Ω–∞–±–æ—Ä–æ–≤
          </Box>
        </Box>
      )}
    </Box>
  );
};
