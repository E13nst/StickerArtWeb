import { create } from 'zustand';
import { StickerSetResponse, AuthResponse } from '@/types/sticker';

interface StickerState {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  isLoading: boolean;
  isAuthLoading: boolean;
  
  // –î–∞–Ω–Ω—ã–µ
  stickerSets: StickerSetResponse[];
  authStatus: AuthResponse | null;
  currentPage: number;
  totalPages: number;
  totalElements: number;
  
  // –û—à–∏–±–∫–∏
  error: string | null;
  authError: string | null;
  
  // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
  setLoading: (loading: boolean) => void;
  setAuthLoading: (loading: boolean) => void;
  
  // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
  setStickerSets: (stickerSets: StickerSetResponse[]) => void;
  addStickerSets: (stickerSets: StickerSetResponse[]) => void; // –î–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  updateStickerSet: (id: number, stickerSet: Partial<StickerSetResponse>) => void;
  removeStickerSet: (id: number) => void;
  
  // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  setAuthStatus: (authStatus: AuthResponse) => void;
  
  // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –æ—à–∏–±–æ–∫
  setError: (error: string | null) => void;
  setAuthError: (error: string | null) => void;
  clearErrors: () => void;
  
  // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  setPagination: (page: number, totalPages: number, totalElements: number) => void;
  
  // –ú–µ—Ç–æ–¥—ã API
  fetchStickerSets: (page?: number, size?: number) => Promise<void>;
  searchStickerSets: (query: string, page?: number, size?: number) => Promise<void>;
}

export const useStickerStore = create<StickerState>((set, get) => ({
  // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  isLoading: false,
  isAuthLoading: false,
  stickerSets: [],
  authStatus: null,
  currentPage: 0,
  totalPages: 0,
  totalElements: 0,
  error: null,
  authError: null,

  // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
  setLoading: (loading: boolean) => set({ isLoading: loading }),
  setAuthLoading: (loading: boolean) => set({ isAuthLoading: loading }),
  
  // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
  setStickerSets: (stickerSets: StickerSetResponse[]) => set({ stickerSets }),
  
  addStickerSets: (newStickerSets: StickerSetResponse[]) => {
    const { stickerSets } = get();
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å—Ç–∏–∫–µ—Ä—Å–µ—Ç—ã, –∏–∑–±–µ–≥–∞—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
    const existingIds = new Set(stickerSets.map(s => s.id));
    const uniqueNewSets = newStickerSets.filter(s => !existingIds.has(s.id));
    set({ stickerSets: [...stickerSets, ...uniqueNewSets] });
  },
  
  updateStickerSet: (id: number, updates: Partial<StickerSetResponse>) => {
    const { stickerSets } = get();
    const updatedStickerSets = stickerSets.map(stickerSet => 
      stickerSet.id === id ? { ...stickerSet, ...updates } : stickerSet
    );
    set({ stickerSets: updatedStickerSets });
  },
  
  removeStickerSet: (id: number) => {
    const { stickerSets } = get();
    const updatedStickerSets = stickerSets.filter(stickerSet => stickerSet.id !== id);
    set({ stickerSets: updatedStickerSets });
  },
  
  // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  setAuthStatus: (authStatus: AuthResponse) => set({ authStatus }),
  
  // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –æ—à–∏–±–æ–∫
  setError: (error: string | null) => set({ error }),
  setAuthError: (authError: string | null) => set({ authError }),
  clearErrors: () => set({ error: null, authError: null }),
  
  // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  setPagination: (page: number, totalPages: number, totalElements: number) => 
    set({ currentPage: page, totalPages, totalElements }),
  
  // –ú–µ—Ç–æ–¥—ã API - –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞, –±—É–¥—É—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –ø–æ–∑–∂–µ
  fetchStickerSets: async (page = 0, size = 20) => {
    console.log('üîç fetchStickerSets –≤—ã–∑–≤–∞–Ω:', { page, size });
    // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    // –õ–æ–≥–∏–∫–∞ –±—É–¥–µ—Ç –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  },
  
  searchStickerSets: async (query: string, page = 0, size = 20) => {
    console.log('üîç searchStickerSets –≤—ã–∑–≤–∞–Ω:', { query, page, size });
    // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    // –õ–æ–≥–∏–∫–∞ –±—É–¥–µ—Ç –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  },
}));
